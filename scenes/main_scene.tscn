[gd_scene load_steps=5 format=3 uid="uid://bo2r52qtyhe7c"]

[ext_resource type="PackedScene" uid="uid://bkw5e2yj0x77y" path="res://scenes/camerapov.tscn" id="1_hp2rk"]
[ext_resource type="PackedScene" uid="uid://da2i62hjyc1cp" path="res://addons/GodotWeatherSystem/weather_controller.tscn" id="3_eamx0"]
[ext_resource type="PackedScene" uid="uid://sgud4gifcl32" path="res://scenes/UI.tscn" id="4_kvvil"]

[sub_resource type="GDScript" id="GDScript_oj320"]
script/source = "extends Node3D
const NORTH = 0 # +z
const EAST = 1 # +x
const SOUTH = 2 # -z
const WEST = 3 # -x
var level = 0
var cell_coord_dict = {};
var BaseCell = preload(\"res://scenes/base_cell.tscn\")
var root
var uilayer

func _ready():
	root = get_node(\"/root/mainScene\")
	uilayer = root.get_node(\"/root/mainScene/interface\")
	if BaseCell.can_instantiate():
		var base = BaseCell.instantiate()
		self.add_child(base)

func _plop(new_cell, original_cell):
	match original_cell.name:
		\"WestWall\":
			var new_wall = new_cell.find_child(opposite_of(\"WestWall\"), true)
			if new_wall:
				new_wall.visible=false
				if original_cell.name == opposite_of(new_wall.name):
					original_cell.visible=false
			_go_west(new_cell, original_cell)
		\"NorthWall\":
			var new_wall = new_cell.find_child(opposite_of(\"NorthWall\"), true)
			if new_wall:
				new_wall.visible=false
				if original_cell.name == opposite_of(new_wall.name):
					original_cell.visible=false
			_go_north(new_cell, original_cell)
		\"SouthWall\":
			var new_wall = new_cell.find_child(opposite_of(\"SouthWall\"), true)
			if new_wall:
				new_wall.visible=false
				if original_cell.name == opposite_of(new_wall.name):
					original_cell.visible=false
			_go_south(new_cell, original_cell)
		\"EastWall\":
			var new_wall = new_cell.find_child(opposite_of(\"EastWall\"), true)
			if new_wall:
				new_wall.visible=false
				if original_cell.name == opposite_of(new_wall.name):
					original_cell.visible=false
			_go_east(new_cell, original_cell)
	var dict = {new_cell: new_cell.global_position}
	cell_coord_dict.merge(dict)
	var overlaps = _cell_is_overlapping(new_cell)
	if overlaps:
		_unplop(overlaps)
		

func _go_north(new_cell, original_cell):
	var newpos = Vector3(5.0,level*5,0.0)
	var mypos = original_cell.get_parent_node_3d().position
	new_cell.translate(mypos+newpos)

func _go_south(new_cell, original_cell):
	var newpos = Vector3(-5.0,level*5,0.0)
	var mypos = original_cell.get_parent_node_3d().position
	new_cell.global_translate(mypos+newpos)

func _go_east(new_cell, original_cell):
	var newpos = Vector3(0.0,level*5,5.0)
	var mypos = original_cell.get_parent_node_3d().position
	new_cell.translate(mypos+newpos)

func _go_west(new_cell, original_cell):
	var newpos = Vector3(0.0,level*5,-5.0)
	var mypos = original_cell.get_parent_node_3d().position
	new_cell.translate(mypos+newpos)

static func opposite_of(direction):
	match direction:
		\"WestWall\":
			return \"EastWall\"
		\"NorthWall\":
			return \"SouthWall\"
		\"SouthWall\":
			return \"NorthWall\"
		\"EastWall\":
			return \"WestWall\"

func _physics_process(delta):
	var cell_to_add = load(uilayer.get_cell_type())
	#tem que andar a arvore inteira e descobrir de onde ta vindo o sinal
	for node in get_children():
		for child in node.get_children():
			if child.has_method(\"_on_static_body_3d_input_event\"):
				if child.can_expand:
					if cell_to_add.can_instantiate():
						var newCell = cell_to_add.instantiate()
						child.can_expand = false
						_plop(newCell,child)
						self.add_child(newCell)
						var overlaps = _cell_is_overlapping(newCell)
						#_unplop(overlaps)
				if child.deletable:
					print(\"deleting \", node)
					node.queue_free()
			else:
				continue
				
					
func _unplop(nodes):
	for node in nodes:
		print(\"freeing \", node)
		node.queue_free()
	pass

func _cell_is_overlapping(node):
	var overlaps = []
	for cell in cell_coord_dict:
		if cell_coord_dict[cell] == node.position:
			overlaps.append(node)
	return overlaps
"

[node name="mainScene" type="Node3D"]

[node name="GimbalCamera" parent="." instance=ExtResource("1_hp2rk")]
process_mode = 3
transform = Transform3D(-2.62268e-08, -8.88178e-16, -0.6, 0, 0.6, 1.77636e-15, 0.6, 0, -2.62268e-08, -5, 6, -1)
visible = false

[node name="WeatherController" parent="." instance=ExtResource("3_eamx0")]
timeSpeedMultiplier = 1000.0

[node name="Building" type="Node3D" parent="."]

[node name="Floor" type="Node3D" parent="Building"]
script = SubResource("GDScript_oj320")

[node name="interface" parent="." instance=ExtResource("4_kvvil")]
